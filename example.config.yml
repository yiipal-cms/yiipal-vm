# Update the hostname to the local development environment hostname.
vagrant_hostname: local.yiipal.com
vagrant_machine_name: yiipal

# Set the IP address so it doesn't conflict with other Drupal VM instances.
vagrant_ip: 0.0.0.0

# Use drupal-vm to match Acquia Cloud environments.
vagrant_box: geerlingguy/drupal-vm
workspace: /root

# Set drupal_site_name to the project's human-readable name.
drupal_site_name: 'Yiipal CMS'

# Toggling this to `true` would invoke `composer install` with the
# projects own `composer.json` successfully.
composer_version_branch: '--2'
composer_keep_updated: true
drupal_build_composer_project: false
drupal_build_composer: false
drupal_composer_path: false
drupal_composer_install_dir: /var/www/yiipal

# Provide the path to the project root to Vagrant.
vagrant_synced_folders:
  # Set the local_path for the first synced folder to `.`.
  -
    local_path: .
    # Set the destination to the Acquia Cloud subscription machine name.
    destination: "{{ drupal_composer_install_dir }}"
    type: nfs

# Required Drupal settings.
drupal_core_path: "{{ drupal_composer_install_dir }}/docroot"
ssh_home: "{{ drupal_composer_install_dir }}"

# Multisite installations should configure additional databases here.
# It's recommended to prefix database names with 'drupal'. Otherwise,
# you'll need to add additional users in the 'mysql_users' section.
mysql_databases:
  -
    name: yiipal
    encoding: utf8
    collation: utf8_general_ci

mysql_users:
  -
    name: yiipal
    host: '%'
    password: yiipal
    priv: 'yiipal%.*:ALL'

drupal_db_user: yiipal
drupal_db_password: yiipal
drupal_db_name: yiipal

# Set this to 'false' if you don't need to install drupal (using the drupal_*
# settings below), but instead copy down a database (e.g., using drush sql-sync).
drupal_install_site: false

# Drupal VM automatically creates a drush alias file in your ~/.drush folder if
# this variable is 'true'.
configure_drush_aliases: false

# Multisite installations should configure additional domains here.
apache_vhosts:
  # Drupal VM's default domain, evaluating to whatever `vagrant_hostname` is set to (drupalvm.dev by default).
  -
    servername: '{{ drupal_domain }}'
    documentroot: '{{ drupal_core_path }}'
    extra_parameters: '{{ apache_vhost_php_fpm_parameters }}'
  # Domain for the Drupal VM Dashboard
  -
    servername: 'dashboard.{{ drupal_domain }}'
    documentroot: /var/www/dashboard
    extra_parameters: '{{ apache_vhost_php_fpm_parameters }}'

# This is required for front-end building tools.
nodejs_version: 12.x
nodejs_npm_global_packages:
  -
    name: yarn
  -
    name: bower
  -
    name: gulp-cli
  -
    name: webpack
  -
    name: webpack-cli
nodejs_install_npm_user: '{{ drupalvm_user }}'
npm_config_prefix: '/home/{{ drupalvm_user }}/.npm-global'
extra_packages:
  - patchutils
  - sqlite
installed_extras:
  - adminer
  - selenium
  - mailhog
  - memcached
  - nodejs
  # - solr
  - xdebug
  # - newrelic

# newrelic_license_key: ''

# PHP 7.4.
php_version: '7.4'
php_packages_extra:
  - 'php{{ php_version }}-curl'
  - 'php{{ php_version }}-bz2'
  - 'php{{ php_version }}-imagick'
  - 'php{{ php_version }}-zip'
  - imagemagick

# XDebug configuration.
php_xdebug_version: 2.9.6
# Change this value to 1 in order to enable xdebug by default.
php_xdebug_default_enable: 0
php_xdebug_coverage_enable: 0
# php_xdebug_cli_disable: 'yes'
php_xdebug_cli_disable: false
php_xdebug_remote_enable: 1
php_xdebug_remote_connect_back: 1
php_xdebug_remote_autostart: 1
php_xdebug_remote_log: "{{ drupal_composer_install_dir }}/tmp/xdebug.log"
# Use PHPSTORM for PHPStorm, sublime.xdebug for Sublime Text.
php_xdebug_idekey: PHPSTORM
php_xdebug_max_nesting_level: 256
php_xdebug_remote_port: '9000'
php_memory_limit: 512M

# Acquia Search defaults to 4.5.1.
solr_version: 4.5.1
